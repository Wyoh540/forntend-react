// This file is auto-generated by @hey-api/openapi-ts

export type BodyLoginAccessToken = {
    grant_type?: string | null;
    username: string;
    password: string;
    scope?: string;
    client_id?: string | null;
    client_secret?: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    tags?: Array<string>;
};

export type ItemPublic = {
    title: string;
    id: number;
    owner_id: number;
    owner: UserPubic;
    tags: Array<TagName>;
};

export type ItemUpdate = {
    title?: string | null;
};

export type PageItemPublic = {
    items: Array<ItemPublic>;
    total: number | null;
    page: number | null;
    size: number | null;
    pages?: number | null;
};

export type Tag = {
    id: number;
    name: string;
};

export type TagList = {
    data?: Array<Tag>;
};

export type TagName = string;

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: string | null;
    password: string;
};

export type UserPubic = {
    id?: number | null;
    email?: string | null;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: string | null;
};

export type UsersPublic = {
    data: Array<UserPubic>;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type LoginAccessTokenData = {
    body: BodyLoginAccessToken;
    path?: never;
    query?: never;
    url: '/api/v1/login/access-token';
};

export type LoginAccessTokenErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginAccessTokenError = LoginAccessTokenErrors[keyof LoginAccessTokenErrors];

export type LoginAccessTokenResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type LoginAccessTokenResponse = LoginAccessTokenResponses[keyof LoginAccessTokenResponses];

export type GetUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type GetUsersResponses = {
    /**
     * Successful Response
     */
    200: UsersPublic;
};

export type GetUsersResponse = GetUsersResponses[keyof GetUsersResponses];

export type CreateUserData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/users/';
};

export type CreateUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
    /**
     * Successful Response
     */
    200: UserPubic;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type GetUserMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/me';
};

export type GetUserMeResponses = {
    /**
     * Successful Response
     */
    200: UserPubic;
};

export type GetUserMeResponse = GetUserMeResponses[keyof GetUserMeResponses];

export type GetItemsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page number
         */
        page?: number;
        /**
         * Page size
         */
        size?: number;
    };
    url: '/api/v1/items/';
};

export type GetItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetItemsError = GetItemsErrors[keyof GetItemsErrors];

export type GetItemsResponses = {
    /**
     * Successful Response
     */
    200: PageItemPublic;
};

export type GetItemsResponse = GetItemsResponses[keyof GetItemsResponses];

export type UpdateItemData = {
    body: ItemUpdate;
    path?: never;
    query: {
        item_id: number;
    };
    url: '/api/v1/items/';
};

export type UpdateItemErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateItemError = UpdateItemErrors[keyof UpdateItemErrors];

export type UpdateItemResponses = {
    /**
     * Successful Response
     */
    200: ItemPublic;
};

export type UpdateItemResponse = UpdateItemResponses[keyof UpdateItemResponses];

export type CreateItemData = {
    body: ItemCreate;
    path?: never;
    query?: never;
    url: '/api/v1/items/';
};

export type CreateItemErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateItemError = CreateItemErrors[keyof CreateItemErrors];

export type CreateItemResponses = {
    /**
     * Successful Response
     */
    200: ItemPublic;
};

export type CreateItemResponse = CreateItemResponses[keyof CreateItemResponses];

export type GetItemTagsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/items/tags/';
};

export type GetItemTagsResponses = {
    /**
     * Successful Response
     */
    200: TagList;
};

export type GetItemTagsResponse = GetItemTagsResponses[keyof GetItemTagsResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8000' | (string & {});
};